<Application x:Class="IUR_Semestral_Work.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:IUR_Semestral_Work"
             StartupUri="Views/MainWindow.xaml">
    <Application.Resources>
        
        <!-- Page icons style (those in the bottom of screen) -->
        <Style x:Key="PageIcon" TargetType="RadioButton">
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="Width" Value="80"/>
            <Setter Property="Height" Value="80"/>
            <Setter Property="Margin" Value="30,0,30,0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <Border x:Name="IconBorder"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        BorderBrush="MediumSpringGreen"
                        Background="Transparent"
                        CornerRadius="5">
                            <Image Margin="5" Source="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter Property="Opacity" Value="0.5"/>
                            </Trigger>
                            <!-- Dim\Highlight animation -->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="IconBorder" 
                                                     Storyboard.TargetProperty="Opacity"
                                                     To="0.3" Duration="0:0:0.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="IconBorder" 
                                                     Storyboard.TargetProperty="Opacity"
                                                     To="1" Duration="0:0:0.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- style of normal buttons -->
        <Style x:Key="ButtonStyle" TargetType="Button">
            <Setter Property="Height" Value="60"/>
            <Setter Property="Width" Value="250"/>
            <Setter Property="Margin" Value="0,20"/>
            <Setter Property="FontSize" Value="25"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="30" BorderThickness="1" Padding="2">
                            <ContentPresenter x:Name="MyContentPresenter" 
                              Content="{TemplateBinding Content}"
                              HorizontalAlignment="Center" 
                              VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="True">
                                <Setter TargetName="border" Property="Background" Value="MediumSpringGreen"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="border" Property="Background" Value="IndianRed"/>
                            </Trigger>
                            <!-- Dim animation (works only when enabled since disabled is already dimmed) -->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="border" 
                                                             Storyboard.TargetProperty="Opacity"
                                                             To="0.8" Duration="0:0:0.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>                                       
                                            <DoubleAnimation Storyboard.TargetName="border" 
                                                             Storyboard.TargetProperty="Opacity"
                                                             To="1" Duration="0:0:0.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Filtering checkboxes style -->
        <Style x:Key="CheckBoxStyle" TargetType="CheckBox">
            <Setter Property="Foreground" Value="AliceBlue"/>
            <Setter Property="Margin" Value="10"/>
            <Style.Triggers>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Background" Value="MediumSpringGreen"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="False">
                    <Setter Property="Background" Value="IndianRed"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- USERNAME VALIDATION STYLE -->
        <Style TargetType="TextBox" x:Key="usernameValidationStyle">
            <Style.Triggers>
                <DataTrigger Binding="{Binding ElementName=usernameTB, Path=(Validation.HasError)}" Value="False">
                    <Setter Property="Background" Value="LightGreen"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding ElementName=usernameTB, Path=(Validation.HasError)}" Value="True">
                    <Setter Property="Background" Value="LightCoral"/>
                    <Setter Property="ToolTip" Value="{Binding ElementName=usernameTB, Path=(Validation.Errors)[0].ErrorContent}"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!-- PASSWORD VALIDATION STYLE -->
        <Style TargetType="TextBox" x:Key="passwordValidationStyle">
            <Style.Triggers>
                <DataTrigger Binding="{Binding ElementName=passwordTB, Path=(Validation.HasError)}" Value="False">
                    <Setter Property="Background" Value="LightGreen"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding ElementName=passwordTB, Path=(Validation.HasError)}" Value="True">
                    <Setter Property="Background" Value="LightCoral"/>
                    <Setter Property="ToolTip" Value="{Binding ElementName=passwordTB, Path=(Validation.Errors)[0].ErrorContent}"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        
        <!-- Info about trash disposal style -->
        <Style TargetType="ListView" x:Key="trashDisposalInfoStyle">
            <Setter Property="Background" Value="#0F0F0F"/>
            <Setter Property="BorderBrush" Value="MediumSpringGreen"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="VirtualizingPanel.ScrollUnit" Value="Pixel"/>
            <Setter Property="Margin" Value="10"/>
            <Setter Property="MaxHeight" Value="430"/>
            <Style.Triggers>
                <Trigger Property="IsVisible" Value="True">
                    <!-- Grow the listview animation -->
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Duration="0:0:0.150" From="0" To="430" Storyboard.TargetProperty="Height"/>
                                <DoubleAnimation Duration="0:0:0.150" From="0" To="500" Storyboard.TargetProperty="Width"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <!-- Exit action not possible since the listview won't be visible -->
                </Trigger>
            </Style.Triggers>
        </Style>
    </Application.Resources>
</Application>
